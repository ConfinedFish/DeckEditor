package cards.type;

import java.util.ArrayList;
import java.util.Arrays;

public enum SubType{
	ADVISOR,
	AETHERBORN,
	AJANI,
	ALARA,
	ALLY,
	AMINATOU,
	AND,
	ANGEL,
	ANGRATH,
	ANTEATER,
	ANTELOPE,
	APE,
	ARCANE,
	ARCHER,
	ARCHON,
	ARKHOS,
	ARLINN,
	ARTIFICER,
	ASHIOK,
	ASSASSIN,
	ASSEMBLY,
	ASSEMBLYWORKER,
	ATOG,
	AURA,
	AUROCHS,
	AVATAR,
	AZGOL,
	AZRA,
	BADGER,
	BARBARIAN,
	BASILISK,
	BAT,
	BEAR,
	BEAST,
	BEAVER,
	BEEBLE,
	BELENON,
	BERSERKER,
	BIRD,
	BLINKMOTH,
	BOAR,
	BOLAS,
	BRAINIAC,
	BRINGER,
	BRUSHWAGG,
	BUREAUCRAT,
	CAMARID,
	CAMEL,
	CARIBOU,
	CARRIER,
	CARTOUCHE,
	CAT,
	CENTAUR,
	CEPHALID,
	CHANDRA,
	CHICKEN,
	CHILD,
	CHIMERA,
	CITIZEN,
	CLAMFOLK,
	CLERIC,
	COCKATRICE,
	CONSPIRACY,
	CONSTRUCT,
	CONTRAPTION,
	COW,
	COWARD,
	CRAB,
	CROCODILE,
	CURSE,
	CYBORG,
	CYCLOPS,
	DACK,
	DARETTI,
	DAUTHI,
	DEER,
	DEMON,
	DESERT,
	DESERTER,
	DESIGNER,
	DEVIL,
	DINOSAUR,
	DJINN,
	DOMINARIA,
	DOMRI,
	DONKEY,
	DOVIN,
	DRAGON,
	DRAKE,
	DREADNOUGHT,
	DRONE,
	DRUID,
	DRYAD,
	DWARF,
	EATURECRAY,
	EFREET,
	EGG,
	ELDER,
	ELDRAZI,
	ELEMENTAL,
	ELEPHANT,
	ELF,
	ELK,
	ELSPETH,
	ELVES,
	EQUILOR,
	EQUIPMENT,
	ERGAMON,
	ESTRID,
	ETIQUETTE,
	EVER,
	EYE,
	FABACIN,
	FAERIE,
	FERRET,
	FISH,
	FLAGBEARER,
	FOREST,
	FORTIFICATION,
	FOX,
	FREYALISE,
	FROG,
	FUNGUS,
	GAMER,
	GARGOYLE,
	GARRUK,
	GATE,
	GERM,
	GIANT,
	GIDEON,
	GNOME,
	GOAT,
	GOBLIN,
	GOD,
	GOLEM,
	GORGON,
	GRAVEBORN,
	GREMLIN,
	GRIFFIN,
	GUS,
	HAG,
	HARPY,
	HATIFICER,
	HEAD,
	HELLION,
	HERO,
	HIPPO,
	HIPPOGRIFF,
	HOMARID,
	HOMUNCULUS,
	HORMARID,
	HORROR,
	HORSE,
	HOST,
	HOUND,
	HUATLI,
	HUMAN,
	HYDRA,
	HYENA,
	IGPAY,
	ILLUSION,
	IMP,
	INCARNATION,
	INNISTRAD,
	INSECT,
	IQUATANA,
	IR,
	ISLAND,
	JACE,
	JACKAL,
	JAYA,
	JELLYFISH,
	JUGGERNAUT,
	KALDHEIM,
	KAMIGAWA,
	KANGAROO,
	KARN,
	KARSUS,
	KAVU,
	KAYA,
	KEPHALAI,
	KILLBOT,
	KINSHALA,
	KIORA,
	KIRIN,
	KITHKIN,
	KNIGHT,
	KOBOLD,
	KOLBAHAN,
	KOR,
	KOTH,
	KRAKEN,
	KYNETH,
	LADY,
	LAIR,
	LAMIA,
	LAMMASU,
	LEECH,
	LEGEND,
	LEVIATHAN,
	LHURGOYF,
	LICID,
	LILIANA,
	LIZARD,
	LOBSTER,
	LOCUS,
	LORWYN,
	LUVION,
	MANTICORE,
	MASTICORE,
	MEDITATION,
	MERCADIA,
	MERCENARY,
	MERFOLK,
	METATHRAN,
	MIME,
	MINE,
	MINION,
	MINOTAUR,
	MIRRODIN,
	MOAG,
	MOLE,
	MONGER,
	MONGOOSE,
	MONGSENG,
	MONK,
	MONKEY,
	MOONFOLK,
	MOUNTAIN,
	MUMMY,
	MURAGANDA,
	MUTANT,
	MYR,
	MYSTIC,
	NAGA,
	NAHIRI,
	NARSET,
	NAUTILUS,
	NEPHILIM,
	NEW,
	NIGHTMARE,
	NIGHTSTALKER,
	NINJA,
	NISSA,
	NIXILIS,
	NOGGLE,
	NOMAD,
	NYMPH,
	OCTOPUS,
	OF,
	OGRE,
	OOZE,
	OR,
	ORB,
	ORC,
	ORGG,
	OUPHE,
	OX,
	OYSTER,
	PANGOLIN,
	PARATROOPER,
	PEGASUS,
	PENGUIN,
	PENTAVITE,
	PEST,
	PHELDDAGRIF,
	PHENOMENON,
	PHOENIX,
	PHYREXIA,
	PILOT,
	PINCHER,
	PIRATE,
	PLAINS,
	PLANE,
	PLANT,
	POWER,
	PRAETOR,
	PRISM,
	PROCESSOR,
	PROPER,
	PYRULEA,
	RABBIT,
	RABIAH,
	RACCOON,
	RAL,
	RAT,
	RATH,
	RAVNICA,
	REALM,
	REBEL,
	REFLECTION,
	REGATHA,
	RHINO,
	RIGGER,
	ROGUE,
	ROWAN,
	SABLE,
	SAGA,
	SAHEELI,
	SALAMANDER,
	SAMURAI,
	SAMUT,
	SAND,
	SAPROLING,
	SARKHAN,
	SATYR,
	SCARECROW,
	SCARIEST,
	SCHEME,
	SCIENTIST,
	SCION,
	SCORPION,
	SCOUT,
	SEE,
	SEGOVIA,
	SERF,
	SERPENT,
	SERRA,
	SHADE,
	SHADOWMOOR,
	SHAMAN,
	SHANDALAR,
	SHAPESHIFTER,
	SHEEP,
	SHIP,
	SHRINE,
	SIREN,
	SKELETON,
	SLITH,
	SLIVER,
	SLUG,
	SNAKE,
	SOLDIER,
	SOLTARI,
	SORIN,
	SPAWN,
	SPECTER,
	SPELLSHAPER,
	SPHINX,
	SPIDER,
	SPIKE,
	SPIRIT,
	SPLINTER,
	SPONGE,
	SPY,
	SQUID,
	SQUIRREL,
	STARFISH,
	SURRAKAR,
	SURVIVOR,
	SWAMP,
	TAMIYO,
	TEFERI,
	TETRAVITE,
	TEZZERET,
	THALAKOS,
	THOPTER,
	THRULL,
	TIBALT,
	TOWER,
	TOWNSFOLK,
	TRAP,
	TREEFOLK,
	TRIBAL,
	TRILOBITE,
	TRISKELAVITE,
	TROLL,
	TURTLE,
	U2019S,
	UGIN,
	ULGROTHA,
	UNICORN,
	URZA,
	VALLA,
	VAMPIRE,
	VAMPYRE,
	VANGUARD,
	VEDALKEN,
	VEHICLE,
	VENSER,
	VIASHINO,
	VILLAIN,
	VIVIEN,
	VOLVER,
	VRASKA,
	VRYN,
	WAITER,
	WALL,
	WARRIOR,
	WEIRD,
	WEREWOLF,
	WHALE,
	WILDFIRE,
	WILL,
	WINDGRACE,
	WIZARD,
	WOLF,
	WOLVERINE,
	WOMBAT,
	WORKER,
	WORM,
	WRAITH,
	WRESTLER,
	WURM,
	XENAGOS,
	XEREX,
	YANGGU,
	YANLING,
	YETI,
	ZENDIKAR,
	ZOMBIE,
	ZUBERA;
	public static ArrayList<String> errorTypes = new ArrayList<String>();
	
	public static ArrayList<SubType> parseString(String string){
		ArrayList<String> stringArrayList = new ArrayList<>(Arrays.asList(string.trim().split("\\W+")));
		ArrayList<SubType> subTypes = new ArrayList<>();
		for (String strings : stringArrayList){
			if (strings != null && strings.length() > 0)
				try{
					subTypes.add(valueOf(strings));
				} catch (Exception e){
					if (!errorTypes.contains(strings))
						errorTypes.add(strings);
				}
		}
		return subTypes;
	}
	
}
